name: publish # 워크플로 이름

on:
  push:
    branches: [main]
  workflow_dispatch: true

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # --- macOS (Apple Silicon / Intel) ---
          - platform: macos-latest
            args: "--target aarch64-apple-darwin"
          - platform: macos-latest
            args: "--target x86_64-apple-darwin"
          # --- Linux (AppImage·deb·rpm 등) ---
          - platform: ubuntu-22.04
            args: ""
          # --- Windows (MSI·NSIS EXE) ---
          - platform: windows-latest
            args: ""
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install system dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf   # Tauri v2 의존성

      - run: yarn install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN:
            ${{ secrets.GITHUB_TOKEN }}
            # macOS 코드 서명
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_CERTIFICATE }}
          WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}
        with:
          macOSSign: true
          macOSNotarize: true
          windowsSign: true
          tagName: app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: "_"
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
